#jinja2:lstrip_blocks: True

{% set node = node[ansible_hostname] %}
{% set bgpvars = node.bgp %}
{% set ospfvars = node.ospf %}
{% set intvars = node.interfaces.common %}
{% set vrfs = node.vrfs %}
# bird.conf template for {{ansible_hostname}}
# Created by Ansible
#
log "/var/log/bird.log" all;

{% if node.router_id is defined %}
router id {{node.router_id | ipaddr }};
{% endif %}

{% if vrfs is defined %}
# Defining routing tables (VRFs)
{%   for vrf in vrfs %}
table {{vrf.name}};
{%   endfor %}
{% endif %}

{% if filters is defined %}
# filters begin
{%    for f in filters %}
filter {{f}} {
{{ filters[f] }}
}
{%    endfor%}
# filters end
{% endif %}

# BFD begin
protocol bfd {
{% for iface in intvars %}
  {% if intvars[iface].bfd is defined %}
    {% set bfdvars = intvars[iface].bfd %}
    interface "{{iface}}" {
    {% if bfdvars.min_rx is defined %}
      min rx interval {{bfdvars.min_rx}} ms;
    {% else %}
      min rx interval 100 ms;
    {% endif %}
    {% if bfdvars.min_tx is defined %}
      min tx interval {{bfdvars.min_tx}} ms;
    {% else %}
      min tx interval 100 ms;
    {% endif %}
    {% if bfdvars.idle_tx is defined %}
      idle tx interval {{bfdvars.idle_tx}} ms;
    {% else %}
      idle tx interval 500 ms;
    {% endif %}
    };
  {% endif %}
{% endfor %}
{% if bgpvars is defined and bgpvars.neighbors is defined %}
  {% for neigh in bgpvars.neighbors %}
    {% if neigh.bfd is defined %}
      {% if neigh.bfd != "" %}
    neighbor {{neigh.ipv4 | ipaddr('address') }} dev "{{neigh.bfd}}";
      {% else %}
    neighbor {{neigh.ipv4 | ipaddr('address') }};
      {% endif %}
    {% endif %}
  {% endfor %}
{% endif %}

}
# BFD end

# Direct protocol for global routing table
protocol direct {
    interface "-eth0"{% for iface in intvars %}{% if not intvars[iface].vrf is defined %}, "{{iface}}"{% endif %}{% endfor %};
}

{% if vrfs is defined %}
# Direct protocol for each VRF routing table
{%   for vrf in vrfs %}
# {{vrf.name}}
protocol direct {
    interface "{{vrf.name}}"{% for iface in intvars %}{% if intvars[iface].vrf is defined and intvars[iface].vrf == vrf.name %}, "{{iface}}"{% endif %}{% endfor %};
    table {{vrf.name}};
}
{%   endfor %}
{% endif %}

# default routing table
protocol kernel {
    learn on; # Learn all alien routes from the kernel
    # persist; # Don't remove routes on bird shutdown
    scan time 20; # Scan kernel routing table every 20 seconds
    import none; # Default is import all
    export all; # Default is export none
    # kernel table 254; # Kernel table to synchronize with (default: ain)
{% if bgpvars is defined and bgpvars.merge_paths is defined %}
    merge paths on;
{% endif %}
}

{% if vrfs is defined %}
# User-defined routing tables (VRFs)
{%   for vrf in vrfs %}
# {{vrf.name}}
protocol kernel {
    table {{vrf.name}};
    kernel table {{vrf.table}};
    learn on; # Learn all alien routes from the kernel
    # persist; # Don't remove routes on bird shutdown
    scan time 20; # Scan kernel routing table every 20 seconds
    import all; # Default is import all
    export all; # Default is export none
{%      if bgpvars is defined and bgpvars.merge_paths is defined %}
    merge paths on;
{%      endif %}
}
{%   endfor %}
{% endif %}

protocol device {
    scan time 10;
}

{% if bgpvars is defined and bgpvars.neighbors is defined %}
{%  for neigh in bgpvars.neighbors %}
protocol bgp {{neigh.name}} {
{%   if neigh.vrf is defined %}
    table {{neigh.vrf}};
{%   endif %}
{%   if neigh.import is defined %}
    import filter {{neigh.import}};
{%   elif bgpvars.import is defined and bgpvars.import != "all" %}
    import filter {{bgpvars.import}};
{%   else %}
    import all;
{%   endif %}
{%   if neigh.export is defined %}
    export filter {{neigh.export}};
{%   elif bgpvars.export is defined and bgpvars.export != "all" %}
    export filter {{bgpvars.export}};
{%   else %}
    export all;
{%   endif %}
    local as {{bgpvars.asn}};
    neighbor {{neigh.ipv4 | ipaddr('address') }} as {{neigh.asn}};
{%   if neigh.next_hop_self is defined %}
    next hop self;
{%   endif %}
{%   if neigh.bfd is defined %}
    bfd on;
{%   endif %}
{%   if neigh.check_link is defined %}
    check link on;
{%   endif %}
# timers tuned for fast convergence/recovery in DC fabric
    hold time 9;
    keepalive time 3;
    graceful restart;
    error wait time 5, 15;
    connect delay time 1;
    error forget time 30;
    connect retry time 10;
}
{%  endfor %}
{% endif %}

{% if ospfvars is defined %}
protocol ospf {{ospfvars.name|default("")}} {
    debug { {{bird_dedug|default("states, routes, filters, interfaces, events")}} };
    tick 2; rfc1583compat yes;
{%  if ospfvars.import is defined and ospfvars.import != "all" %}
    import filter {{ospfvars.import}};
{%  else %}
    import all;
{%  endif %}
{%  if ospfvars.export is defined and ospfvars.export != "all" %}
    export filter {{ospfvars.export}};
{%  else %}
    export all;
{%  endif %}
{%  if ospfvars.areas is defined %}
{%   for ospfarea in ospfvars.areas %}
    area {{ospfarea.area}} {
{%    for stubnet in ospfarea.stubnets %}
      stubnet {{stubnet.net | ipv4}} {
{%     if stubnet.summary is defined %}
        summary;
{%     endif %}
{%     if stubnet.cost is defined %}
        cost {{stubnet.cost}}; # to_servers
{%     endif %}
      };
{%    endfor %}
{%    for iface in ospfarea.interfaces %}
      interface "{{iface.name}}" {
{%     if iface.type is defined %}
        type {{iface.type}};
{%     endif %}
{%     if iface.check_link is defined %}
        check link on;
{%     endif %}
      };
{%    endfor %}
    };
}
{%   endfor %}
{% endif %}
{% endif %}
